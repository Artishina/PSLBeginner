//DO NOT MODIFY  My first procedure|ZPOLINA|||||||1
//public ZPOLINA(String RETURN, Number VERSN, Number ACN, String CONTRACT, Boolean ZPFOLIO, Date EFD, Boolean ZBNSACC, Boolean ZSHOWNER)
	/*
	 ORIG: 1 - 22/11/2014
	 DESC: 
	
	 ---- Comments --------------------------------------------------------
	
	 ---- Revision History ------------------------------------------------
	
	 ****** Consider using setAuditFlag for all objects in this procedure
	   example :do dep.setAuditFlag(1)
	   
	   14/08/2019 - Polina Borisova 
	
	*/
	
	//do test
	
	//quit
	
TABLEDEL
	
	type Number cnt = 0
	
	while (cnt < 228) do {	
		do Db.delete("TABLE1","ID=:cnt")
		set cnt = cnt + 1
	}
		
	quit
	
OUTPUT(String fileDirectory, String filesName)

	type literal String EOL = (13,10).char()
	type literal String TAB = 9.char()
	
	type String rec,ZNAME,ZAGE,ZBD,ZCITY
	type Number ZRECNT,ZRECERR,ZRECEM
	
	type IO io = Class.new("IO")

	set io.directory = fileDirectory 
	set io.fileName = filesName 
	set io.openParams = "NEWV/WRITE"
	
	set io.timeout = 5
	set io.charsetName = "UTF-8"
	set io.recordSize = 1024
	
	do io.open()
	
	catch ioxcpt {
		do io.close()
		
     	 	if ioxcpt'["%PSL-E-IO" quit
     	 	throw ioxcpt
     	 	write "Open failed: ", ioxcpt.type, !
	}

	set rec = "#HDR"_TAB_"TEST1"_TAB_$$compTS^ZDFMVAL(%CurrentDate_","_%CurrentTime)
	
	do io.write(rec, EOL)
		
	set (ZRECNT,ZRECERR,ZRECEM) = 0
	
	type DbSet ztable1 = Db.selectDbSet("TABLE1")
	
	while ztable1.next() do {
		
		type RecordTABLE1 table1 = ztable1.getRecord("TABLE1")
		
		set ZNAME = table1.zname
		set ZBD = table1.birthdate
		set ZCITY= table1.city
		set ZAGE = table1.age
	
		set ZRECNT = ZRECNT + 1		// Total number of records
	
		if 'ZNAME.isNull() set ZRECERR = ZRECERR + 1 
		if 'ZBD.isNull()  set ZRECERR = ZRECERR + 1 
		if 'ZCITY.isNull()  set ZRECERR = ZRECERR + 1 
		if 'ZAGE.isNull()  set ZRECERR = ZRECERR + 1 
		
		if ZNAME.isNull() set ZRECEM = ZRECEM + 1
		if ZBD.isNull()  set ZRECEM = ZRECEM + 1
		if ZCITY.isNull()  set ZRECEM = ZRECEM + 1
		if ZAGE.isNull()  set ZRECEM = ZRECEM + 1
				
		do io.write("#DTL"_TAB_ZRECNT_TAB_ZRECERR, EOL)
		
		set ZRECERR = 0
	}
	
	set rec = "#FTR"_TAB_ZRECEM
	do io.write(rec, EOL)

	do io.close()

	quit	

INPUT(String fileDirectory)

	type literal String TAB = 9.char()
	type literal String filesName = "TEST1.txt"
	
	type String rec
	type Number ZCNT = 0
	type Boolean ZFTR = false
	
	type IO io = Class.new("IO")

	set io.directory = fileDirectory 
	set io.fileName = filesName
	set io.openParams = "READ"
	
	set io.timeout = 5
	set io.charsetName = "UTF-8"
	set io.recordSize = 1024
	
	do io.open()
	
	catch ex {
		do OUTPUT(fileDirectory,filesName)
		if 'io.device.isNull() do io.close()
	}
	
	for  set rec = io.read()  do {  
		
		set ZCNT = ZCNT + 1
		
		type RecordTABLE1 ztable = Class.new("RecordTABLE1")
		
		set ztable.id = Db.nextVal("TABLE1")
		
		set ztable.zname = rec.piece(TAB,1)
		set ztable.city = rec.piece(TAB,2)
		set ztable.age = rec.piece(TAB,3)
		set ztable.birthdate = rec.piece(TAB,4)
		
		do ztable.save()
	}		
	
	do OUTPUT(fileDirectory,filesName)
	
	do io.close()
	
	quit
	
GET

	do Runtime.rollback()
	
	do INITSYS
	
	type public String SCRHDR = "ZPOLINA"
		
	type literal String DefDir = "/u01/study/spool"
	type literal String DefExt = "LOG"
	type literal String ZPGRP = "POLINATEST"
	type literal String ZPARD = "DIR"
	type literal String ZPAR = "FILEEXT" 
	type literal String array()
	
	type String DROPDOWN(), %READ, %TAB(), VFMQ
	type String fileDirectory,filesName
	
	type Number N = 1
			
	type literal ResultSet zrec = Db.select("PARAM,VALUE","ZUTBLPARAM","PARAMGRP='POLINATEST'")
  
  	#WHILE zrec.next() 
		set array(N) = zrec.getCol(2)
		set N = N + 1
    	#END
	
	set fileDirectory = array(1)
		
	set DROPDOWN(array(1))="study"
	set DROPDOWN("/u01/vtbdevnew/spool")="vtbdevnew"

	set %TAB("fileDirectory")="/DES=Enter Directory's name/TYP=T/LEN=200/REQ/TBL=DROPDOWN("
	set %TAB("filesName")="/DES=Enter File's name/TYP=T/LEN=200/REQ"
	set %READ="@@%FN,,@SCRHDR/CEN,fileDirectory/REQ,filesName/NOREQ"
	
	do ^UTLREAD if ER.get() !(VFMQ="Q")
	
	DO VLDFILE(.filesName,array(2))

	do LOADINPROC	

	write "Output file: ",filesName, !
	write "Directory: ",fileDirectory, !
	
	do INPUT(array(1))
	do OUTPUT(array(1),filesName)
	
	quit
	
LOADINPROC
	
	type public Boolean ER = false
	type String ET = "", RM = ""
	
	catch ERR {
		
		set ER = 1, RM = ERR.type_", "_ERR.description, ET = ERR.type
		
		write !,"Error occurred: "_ET_", "_RM,!
		
		if (ERR.type["%GTM-") do ZE^UTLERR
		
	}
	
	quit
	
VLDFILE(String filesName,String extv)

  	type literal String DefName = "OUTPUT"

  	if filesName.isNull() set filesName = DefName
  	
  	set filesName = filesName_"."_extv
  
  	quit

private INITSYS

	do SYSVAR^SCADRV0()
	set %UserID = 9999
	set %UserClass = "SCA"
	set %UserStation = "ZEXTIMPSC"
	
	quit	
	
TEST 

	type literal String ZPGRP = "POLINATEST"
	type literal String ZPARD = "DIR"
	type literal String ZPAR = "FILEEXT" 
	type String extvn
	type String array()
	type Number N=1
			
	//type literal ResultSet zrec = Db.select("PARAM,VALUE","ZUTBLPARAM","PARAMGRP=:ZPGRP")
	type literal ResultSet zrec = Db.select("PARAM,VALUE","ZUTBLPARAM","PARAMGRP='POLINATEST'")
  
  	#WHILE zrec.next() 
	write "arr ",!
  	//type literal RecordZUTBLPARAM rs = Db.getRecord("ZUTBLPARAM","PARAMGRP=:ZPGRP,PARAM=:ZPAR",1)	
	//xecute SET extv = zrec.getCol("VALUE")
	//SET extvn = zrec.getCol("VALUE")
		set array(N) = zrec.getCol(2)
		
		write "arr ",array(N),!
		set N = N + 1
	//type literal String extv= zrec.getCol("VALUE")
    	//type literal String extv = zrec.getCol("VALUE")
    	//type literal String dirv = zrec.getCol(4)
    	//write "extv ",extv,!
    	#END
    	
    	//write "arr ",array(1),!
    	
    	type literal RecordZUTBLPARAM rs = Db.getRecord("ZUTBLPARAM","PARAMGRP=:ZPGRP,PARAM=:ZPAR",1)	
    	write "RS ",rs.value,!
    	
    	//write "extv ",extv,!
	quit
	
TEST0
	type ResultSet zrec = Db.select("PARAM,VALUE","ZUTBLPARAM","PARAMGRP=:ZPGRP")
	//type literal ResultSet zrec = Db.select("PARAM,VALUE","ZUTBLPARAM","PARAMGRP='POLINATEST'")
  
  	while zrec.next() do {
	write "ggg ",!
  	//type literal RecordZUTBLPARAM rs = Db.getRecord("ZUTBLPARAM","PARAMGRP=:ZPGRP,PARAM=:ZPAR",1)	
	//xecute SET extv = zrec.getCol("VALUE")
	//SET extvn = zrec.getCol("VALUE")
	type String extv= zrec.getCol("VALUE")
    	//type literal String extv = zrec.getCol("VALUE")
    	//type literal String dirv = zrec.getCol(4)
    	write "extv ",extv,!
  	}

	quit
	
TEST5 

	type literal String ZPGRP = "POLINATEST"
	type literal String ZPARD = "DIR"
	type literal String ZPAR = "FILEEXT" 
	type String extvn
	type literal String array()
	type Number N=1
			
	type literal ResultSet zrec = Db.select("PARAM,VALUE","ZUTBLPARAM","PARAMGRP='POLINATEST'")
  
  	#WHILE zrec.next() 
		set array(zrec.getCol(1)) = zrec.getCol(2)
		
		write "2arr ",array(zrec.getCol(1)),!
		set N = N + 1
    	#END

	quit
	
		
		