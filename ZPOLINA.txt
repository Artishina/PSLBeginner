//DO NOT MODIFY  My first procedure|ZPOLINA|||||||1
public ZPOLINA(String RETURN, Number VERSN, Number ACN, String CONTRACT, Boolean ZPFOLIO, Date EFD, Boolean ZBNSACC, Boolean ZSHOWNER)
	/*
	 ORIG: 1 - 22/11/2014
	 DESC: 
	
	 ---- Comments --------------------------------------------------------
	
	 ---- Revision History ------------------------------------------------
	
	 ****** Consider using setAuditFlag for all objects in this procedure
	   example :do dep.setAuditFlag(1)
	   
	   14/08/2019 - Polina Borisova 
	
	*/
	
	//do test
	
	//quit
	
	

	type String ERRMSG = ""
	
	// Rollback transaction to avoid TP restarts  
	do Runtime.rollback()	
	
	//do PROC
	
	quit //ERRMSG
	

	
TABLEDEL

	//type literal Number ZID = 2
	//type literal Number ZIDE = 25
	
	//do Db.fastDelete("TABLE1","ID=:3,ID=:4")
	
	type Number cnt = 0
	
	while (cnt < 228) do {	
		do Db.delete("TABLE1","ID=:cnt")
		set cnt = cnt + 1
	}
		
	quit
	
OUTPUT(String fileDirectory, String filesName)

	type literal String EOL = (13,10).char()
	type literal String TAB = 9.char()
	
	type String rec,ZNAME,ZAGE,ZBD,ZCITY
	type Number ZRECNT,ZRECERR,ZRECEM
	
	type IO io = Class.new("IO")

	set io.directory = fileDirectory //"/u01/study/spool"
	set io.fileName = filesName //"TEST2.LOG"
	set io.openParams = "NEWV/WRITE"
	
	set io.timeout = 5
	set io.charsetName = "UTF-8"
	set io.recordSize = 1024
	
	do io.open()
	
	catch ioxcpt {
		do io.close()
		
     	 	if ioxcpt'["%PSL-E-IO" quit
     	 	throw ioxcpt
     	 	write "Open failed: ", ioxcpt.type, !
	}

	set rec = "#HDR"_TAB_"TEST1"_TAB_$$compTS^ZDFMVAL(%CurrentDate_","_%CurrentTime)
	
	do io.write(rec, EOL)
		
	set (ZRECNT,ZRECERR,ZRECEM) = 0
	
	type DbSet ztable1 = Db.selectDbSet("TABLE1")
	
	while ztable1.next() do {
		
		type RecordTABLE1 table1 = ztable1.getRecord("TABLE1")
		
		set ZNAME = table1.zname
		set ZBD = table1.birthdate
		set ZCITY= table1.city
		set ZAGE = table1.age
	
		set ZRECNT = ZRECNT + 1		// Total number of records
	
		if 'ZNAME.isNull() set ZRECERR = ZRECERR + 1 
		if 'ZBD.isNull()  set ZRECERR = ZRECERR + 1 
		if 'ZCITY.isNull()  set ZRECERR = ZRECERR + 1 
		if 'ZAGE.isNull()  set ZRECERR = ZRECERR + 1 
		
		if ZNAME.isNull() set ZRECEM = ZRECEM + 1
		if ZBD.isNull()  set ZRECEM = ZRECEM + 1
		if ZCITY.isNull()  set ZRECEM = ZRECEM + 1
		if ZAGE.isNull()  set ZRECEM = ZRECEM + 1
				
		do io.write("#DTL"_TAB_ZRECNT_TAB_ZRECERR, EOL)
		
		set ZRECERR = 0
	}
	
	set rec = "#FTR"_TAB_ZRECEM
	do io.write(rec, EOL)

	do io.close()

	quit	

INPUT(String fileDirectory)

	type literal String TAB = 9.char()
	type literal String filesName = "TEST1.txt"
	
	type String rec
	type Number ZCNT = 0
	type Boolean ZFTR = false
	
	type IO io = Class.new("IO")

	set io.directory = fileDirectory 
	set io.fileName = filesName
	set io.openParams = "READ"
	
	set io.timeout = 5
	set io.charsetName = "UTF-8"
	set io.recordSize = 1024
	
	do io.open()
	
	catch ex {
		do OUTPUT(fileDirectory,filesName)
		if 'io.device.isNull() do io.close()
	}
	
	for  set rec = io.read()  do {  
		
		set ZCNT = ZCNT + 1
		
		type RecordTABLE1 ztable = Class.new("RecordTABLE1")
		
		set ztable.id = Db.nextVal("TABLE1")
		
		set ztable.zname = rec.piece(TAB,1)
		set ztable.city = rec.piece(TAB,2)
		set ztable.age = rec.piece(TAB,3)
		set ztable.birthdate = rec.piece(TAB,4)
		
		do ztable.save()
	}		
	
	do OUTPUT(fileDirectory,filesName)
	
	do io.close()
	
	quit

private INITSYS

	do SYSVAR^SCADRV0()
	set %UserID = 9999
	set %UserClass = "SCA"
	set %UserStation = "ZEXTIMPSC"
	
	quit

Task 
	type String fileDirectory = "/u01/study/spool"
	type String filesName = "TEST1.txt"
	
	//do INPUT(fileDirectory,filesName)
	
	// TEST2.LOG
		
	quit
	
LOADINPATH	
	
	do Runtime.rollback()
	
	do INITSYS
	
	type literal String EXT = ".LOG"
	type literal String DefName = "OUTPUT"
	
	type public Boolean ERROR = false
	type public String SCRHDR = "ZPOLINA"

	type String DROPDOWN(), %READ, %TAB(), VFMQ
	type String fileDirectory,filesName
	
	//type literal String fileDirectory,filesName
	
	catch ex {
		set ERROR = true	
	}
	
	set DROPDOWN("/u01/study/spool")="study"
	set DROPDOWN("/u01/vtbdevnew/spool")="vtbdevnew"

	set %TAB("fileDirectory")="/DES=Enter Directory's name/TYP=T/LEN=200/REQ/TBL=DROPDOWN("
	set %TAB("filesName")="/DES=Enter File's name/TYP=T/LEN=200/REQ"
	set %READ="@@%FN,,@SCRHDR/CEN,fileDirectory/REQ,filesName/NOREQ"
	
	do ^UTLREAD if ERROR.get() !(VFMQ="Q")
	
	write filesName, !
	write fileDirectory, !
	
	//do LOADINPROC(filesName)
	
	if filesName.isNull() set filesName = DefName
	
	set filesName = filesName_EXT
		
	do INPUT(fileDirectory)
	do OUTPUT(fileDirectory,filesName)
	
	quit	
	
GET 
	type String ZNAME,ZBD,ZCITY,ZAGE
	type String zpar,zval
	type literal String x = CUVAR.%MCP
	
	
/*	
	type literal ResultSet rs = Db.select("PARAM,VALUE","ZUTBLPARAM","PARAMGRP = 'POLINATEST'")
	
	#while rs.next()
		set zpar = rs.getCol("PARAM")
      		set zval = rs.getCol("VALUE")
      		
      		write "zpar = ",zpar, !
      		write "zval = ",zval, !
	#end
	
	//write zpar,!
	
	quit 0
	


	while rs.next()  do {
       		set zpar = rs.getCol("PARAM")
      		set zval = rs.getCol("VALUE")
      		
      		write "zpar = ",zpar, !
      		write "zval = ",zval, !
       }
    */   
       //write "x ",x, !
	
	//quit

GET0
		
	//write "hist ",hist.value,!
		
	type literal Number ZCID = 1100001809
	type literal Number ZTSEQ = 2
	type String TAMT
	
	type literal RecordHIST hist = Db.getRecord("HIST","CID=:ZCID,TSEQ=:ZTSEQ")

	set TAMT = hist.tamt

	write "tamt ",TAMT,!
	
	quit
	
GET1
	type literal String ZPGRP = "POLINATEST"
	type literal String ZPAR = "DIR"
	type String val
		
	type literal RecordZUTBLPARAM hist = Db.getRecord("ZUTBLPARAM","PARAMGRP=:ZPGRP,PARAM=:ZPAR")
		
	set val = hist.value
	
	write "val ",val,!
	
	quit
	
GET2
	type literal String ZPGRP = "POLINATEST"
	type literal String ZPAR = "DIR"
	//type String val
		
	type literal RecordZUTBLPARAM hist = Db.getRecord("ZUTBLPARAM","PARAMGRP=:ZPGRP,PARAM=:ZPAR")
		
	type literal String val = hist.value
	
	write "val ",val,!
	
	quit
	
	